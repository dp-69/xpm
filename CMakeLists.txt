cmake_minimum_required(VERSION 3.12 FATAL_ERROR)

project(xpm_project)

set(CMAKE_VERBOSE_MAKEFILE ON)

set(CMAKE_AUTOMOC ON)








find_package(Qt6 COMPONENTS Core Gui Widgets OpenGLWidgets)

if(Qt6_FOUND)
  qt_standard_project_setup()
  message("Qt6_DIR: " ${Qt6_DIR})
  message("Qt6_VERSION: " ${Qt6_VERSION})
else()
  find_package(Qt5 COMPONENTS Core Gui Widgets REQUIRED) #Charts

  message("Qt5_DIR: " ${Qt5_DIR})
  message("Qt5_VERSION: " ${Qt5_VERSION})
endif()




find_package(VTK REQUIRED)


#find_package(VTK REQUIRED COMPONENTS 
#  CommonColor
#  CommonCore
#  #FiltersSources
#  #InteractionStyle
#  #RenderingContextOpenGL2
#  #RenderingCore
#  #RenderingFreeType
#  #RenderingGL2PSOpenGL2
#  #RenderingOpenGL2
#  GUISupportQt
#)

message("VTK_DIR: " ${VTK_DIR})
message("VTK_VERSION: " ${VTK_VERSION})


add_executable(xpm_project # WIN32
  "xpm_widget.hpp"  

  "mywidg.ui"
  "main.cpp"
  
  
 "functions.cpp"

 "dpl/qt/property_editor/Editors.hpp"
 "dpl/qt/property_editor/PropertyEntities.hpp"
 "dpl/qt/property_editor/QPropertyTreeView.hpp"
)

target_include_directories(xpm_project PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/..")
target_compile_features(xpm_project PUBLIC cxx_std_20)


add_subdirectory(dpl)
target_link_libraries(xpm_project PRIVATE dpl)




if(Qt6_FOUND)
  target_link_libraries(xpm_project PRIVATE Qt6::Core Qt6::Gui Qt6::Widgets Qt6::OpenGLWidgets)

  if(WIN32)
    add_custom_command(
      TARGET xpm_project POST_BUILD
      COMMAND ${CMAKE_COMMAND} -E copy_directory
        ${Qt6_DIR}/../../$<$<CONFIG:Debug>:debug/>Qt6/plugins/platforms/
        $<TARGET_FILE_DIR:xpm_project>/platforms/
    )

    add_custom_command(
      TARGET xpm_project POST_BUILD
      COMMAND ${CMAKE_COMMAND} -E copy_directory
        ${Qt6_DIR}/../../$<$<CONFIG:Debug>:debug/>Qt6/plugins/styles/
        $<TARGET_FILE_DIR:xpm_project>/styles/
    )

    #add_custom_command(TARGET xpm_project POST_BUILD 
    #  COMMAND Qt6::windeployqt
    #  ARGS $<TARGET_FILE:xpm_project>
    #)
  endif()
else()
  target_link_libraries(xpm_project PUBLIC Qt5::Core Qt5::Gui Qt5::Widgets) # Qt5::Charts
endif()








if(VTK_VERSION VERSION_LESS "8.90.0")
  message("VTK_USE_FILE: " ${VTK_USE_FILE})
  include(${VTK_USE_FILE})

  target_link_libraries(xpm_project PRIVATE ${VTK_LIBRARIES}
    vtkCommonColor
    vtkCommonCore
    vtkFiltersModeling
    vtkFiltersSources
    vtkChartsCore
    vtkImagingCore
    vtkIOImage
    vtkInteractionStyle
    vtkInteractionWidgets
    vtkRenderingAnnotation    
    vtkRenderingContextOpenGL2
    vtkRenderingCore
    vtkRenderingFreeType
    vtkRenderingGL2PSOpenGL2
    vtkRenderingOpenGL2
    vtkRenderingVolumeOpenGL2
    vtkGUISupportQt)
else()
  target_link_libraries(xpm_project PRIVATE ${VTK_LIBRARIES})
  vtk_module_autoinit(TARGETS xpm_project MODULES ${VTK_LIBRARIES})
endif()






find_package(Boost REQUIRED COMPONENTS iostreams)
target_link_libraries(xpm_project PRIVATE Boost::iostreams)


find_package(MPI)
if(MPI_FOUND)
  target_link_libraries(xpm_project PRIVATE MPI::MPI_CXX)
endif()

find_package(HYPRE REQUIRED)
target_link_libraries(xpm_project PRIVATE HYPRE::HYPRE)